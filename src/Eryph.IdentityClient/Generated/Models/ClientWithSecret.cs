// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Eryph.IdentityClient.Models
{
    /// <summary> The ClientWithSecret. </summary>
    public partial class ClientWithSecret
    {
        /// <summary> Initializes a new instance of <see cref="ClientWithSecret"/>. </summary>
        internal ClientWithSecret()
        {
            AllowedScopes = new ChangeTrackingList<string>();
            Roles = new ChangeTrackingList<Guid>();
        }

        /// <summary> Initializes a new instance of <see cref="ClientWithSecret"/>. </summary>
        /// <param name="id">
        /// Unique identifier for a eryph client
        /// Only characters a-z, A-Z, numbers 0-9 and hyphens are allowed.
        /// </param>
        /// <param name="name"> human readable name of client, for example email address of owner. </param>
        /// <param name="allowedScopes"> allowed scopes of client. </param>
        /// <param name="roles"> Roles of client. </param>
        /// <param name="tenantId"> Tenant of client. </param>
        /// <param name="key"> private Key of client. </param>
        internal ClientWithSecret(string id, string name, IReadOnlyList<string> allowedScopes, IReadOnlyList<Guid> roles, Guid? tenantId, string key)
        {
            Id = id;
            Name = name;
            AllowedScopes = allowedScopes;
            Roles = roles;
            TenantId = tenantId;
            Key = key;
        }

        /// <summary>
        /// Unique identifier for a eryph client
        /// Only characters a-z, A-Z, numbers 0-9 and hyphens are allowed.
        /// </summary>
        public string Id { get; }
        /// <summary> human readable name of client, for example email address of owner. </summary>
        public string Name { get; }
        /// <summary> allowed scopes of client. </summary>
        public IReadOnlyList<string> AllowedScopes { get; }
        /// <summary> Roles of client. </summary>
        public IReadOnlyList<Guid> Roles { get; }
        /// <summary> Tenant of client. </summary>
        public Guid? TenantId { get; }
        /// <summary> private Key of client. </summary>
        public string Key { get; }
    }
}
