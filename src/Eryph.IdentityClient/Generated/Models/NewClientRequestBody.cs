// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Eryph.IdentityClient.Models
{
    /// <summary> The NewClientRequestBody. </summary>
    public partial class NewClientRequestBody
    {
        /// <summary> Initializes a new instance of <see cref="NewClientRequestBody"/>. </summary>
        /// <param name="name"> Human-readable name of the client, for example email address of owner. </param>
        /// <param name="allowedScopes"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="allowedScopes"/> is null. </exception>
        public NewClientRequestBody(string name, IEnumerable<string> allowedScopes)
        {
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(allowedScopes, nameof(allowedScopes));

            Name = name;
            AllowedScopes = allowedScopes.ToList();
            Roles = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="NewClientRequestBody"/>. </summary>
        /// <param name="name"> Human-readable name of the client, for example email address of owner. </param>
        /// <param name="allowedScopes"></param>
        /// <param name="roles"> The roles of the client,. </param>
        internal NewClientRequestBody(string name, IList<string> allowedScopes, IList<string> roles)
        {
            Name = name;
            AllowedScopes = allowedScopes;
            Roles = roles;
        }

        /// <summary> Human-readable name of the client, for example email address of owner. </summary>
        public string Name { get; }
        /// <summary> Gets the allowed scopes. </summary>
        public IList<string> AllowedScopes { get; }
        /// <summary> The roles of the client,. </summary>
        public IList<string> Roles { get; set; }
    }
}
