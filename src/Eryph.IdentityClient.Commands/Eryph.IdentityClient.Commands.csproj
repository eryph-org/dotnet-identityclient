<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net462;net8.0</TargetFrameworks>
    <IsPackable>false</IsPackable>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Eryph.ClientRuntime.Powershell" Version="0.8.1-beta.1" />
    <PackageReference Include="PowerShellStandard.Library" Version="5.1.1">
      <PrivateAssets>All</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <!-- This can be removed once Azure.Core updates its dependencies. -->
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="8.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Eryph.IdentityClient\Eryph.IdentityClient.csproj" />
  </ItemGroup>

  <!-- Custom properties and targets for packaging the Powershell module -->
  <PropertyGroup>
    <PsModuleName>Eryph.IdentityClient</PsModuleName>
    <GitVersionTargetsBefore>$(GitVersionTargetsBefore);PreparePsModule</GitVersionTargetsBefore>
    <PowershellExecutable>pwsh.exe</PowershellExecutable>
  </PropertyGroup>
  <PropertyGroup Condition="$(TargetFramework.StartsWith('net4'))">
    <PowershellExecutable>powershell.exe</PowershellExecutable>
  </PropertyGroup>

  <Target Name="PreparePsModule" BeforeTargets="DispatchToInnerBuilds">
    <Exec Command="pwsh.exe -NoProfile -File &quot;$([System.IO.Path]::Combine($(MSBuildProjectDirectory), '..', '..', 'build', 'Prepare-PsModule.ps1'))&quot; -ModuleName &quot;$(PsModuleName)&quot; -OutputDirectory &quot;$([System.IO.Path]::Combine($(MSBuildProjectDirectory), 'bin', $(Configuration)))&quot; -MajorMinorPatch &quot;$(GitVersion_MajorMinorPatch)&quot; -NuGetPreReleaseTag &quot;$(GitVersion_NuGetPreReleaseTag)&quot;" />
  </Target>
  <Target Name="PopulatePsModule" AfterTargets="PostBuildEvent">
    <Exec Command="pwsh.exe -NoProfile -File &quot;$([System.IO.Path]::Combine($(MSBuildProjectDirectory), '..', '..', 'build', 'Populate-PsModule.ps1'))&quot; -ModuleName &quot;$(PsModuleName)&quot; -OutputDirectory &quot;$([System.IO.Path]::Combine($(MSBuildProjectDirectory), 'bin', $(Configuration)))&quot; -TargetPath &quot;$(TargetPath)&quot; -TargetFramework &quot;$(TargetFramework)&quot;" />
  </Target>
  <Target Name="TestPsModule" AfterTargets="DispatchToInnerBuilds">
    <Exec Command="pwsh.exe -NoProfile -File &quot;$([System.IO.Path]::Combine($(MSBuildProjectDirectory), '..', '..', 'build', 'Test-PsModule.ps1'))&quot; -ModuleName &quot;$(PsModuleName)&quot; -OutputDirectory &quot;$([System.IO.Path]::Combine($(MSBuildProjectDirectory), 'bin', $(Configuration)))&quot; -NuGetPreReleaseTag &quot;$(GitVersion_NuGetPreReleaseTag)&quot;" />
  </Target>
  <Target Name="PostClean" AfterTargets="Clean">
    <Exec Command="pwsh.exe -NoProfile -File &quot;$([System.IO.Path]::Combine($(MSBuildProjectDirectory), '..', '..', 'build', 'Clean-PsModule.ps1'))&quot; -OutputDirectory &quot;$([System.IO.Path]::Combine($(MSBuildProjectDirectory), 'bin', $(Configuration)))&quot;" />
  </Target>

</Project>
